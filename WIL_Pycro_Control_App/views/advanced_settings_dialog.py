from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_AdvancedSettingsDialog(object):
    def setupUi(self, AdvancedSettingsDialog):
        AdvancedSettingsDialog.setObjectName("AdvancedSettingsDialog")
        AdvancedSettingsDialog.resize(420, 288)
        self.advanced_general_settings_label = QtWidgets.QLabel(AdvancedSettingsDialog)
        self.advanced_general_settings_label.setGeometry(QtCore.QRect(250, 90, 141, 20))
        self.advanced_general_settings_label.setAlignment(QtCore.Qt.AlignCenter)
        self.advanced_general_settings_label.setObjectName("advanced_general_settings_label")
        self.acq_order_combo_box = QtWidgets.QComboBox(AdvancedSettingsDialog)
        self.acq_order_combo_box.setGeometry(QtCore.QRect(330, 150, 81, 22))
        self.acq_order_combo_box.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.acq_order_combo_box.setObjectName("acquisition_order_combo_box")
        self.z_stack_exp_unit_label = QtWidgets.QLabel(AdvancedSettingsDialog)
        self.z_stack_exp_unit_label.setGeometry(QtCore.QRect(190, 140, 21, 16))
        self.z_stack_exp_unit_label.setAlignment(QtCore.Qt.AlignCenter)
        self.z_stack_exp_unit_label.setObjectName("z_stack_exp_unit_label")
        self.z_stack_settings_label = QtWidgets.QLabel(AdvancedSettingsDialog)
        self.z_stack_settings_label.setGeometry(QtCore.QRect(60, 10, 101, 20))
        self.z_stack_settings_label.setAlignment(QtCore.Qt.AlignCenter)
        self.z_stack_settings_label.setObjectName("z_stack_settings_label")
        self.z_stack_exposure_line_edit = QtWidgets.QLineEdit(AdvancedSettingsDialog)
        self.z_stack_exposure_line_edit.setGeometry(QtCore.QRect(130, 140, 61, 20))
        self.z_stack_exposure_line_edit.setObjectName("z_stack_exposure_line_edit")
        self.lsrm_check_box = QtWidgets.QCheckBox(AdvancedSettingsDialog)
        self.lsrm_check_box.setGeometry(QtCore.QRect(250, 120, 151, 20))
        self.lsrm_check_box.setObjectName("lsrm_check_box")
        self.z_stack_exposure_label = QtWidgets.QLabel(AdvancedSettingsDialog)
        self.z_stack_exposure_label.setGeometry(QtCore.QRect(10, 140, 111, 20))
        self.z_stack_exposure_label.setObjectName("z_stack_exposure_label")
        self.video_spectral_check_box = QtWidgets.QCheckBox(AdvancedSettingsDialog)
        self.video_spectral_check_box.setGeometry(QtCore.QRect(260, 40, 121, 20))
        self.video_spectral_check_box.setObjectName("video_spectral_check_box")
        self.video_settings_label = QtWidgets.QLabel(AdvancedSettingsDialog)
        self.video_settings_label.setGeometry(QtCore.QRect(260, 10, 101, 20))
        self.video_settings_label.setAlignment(QtCore.Qt.AlignCenter)
        self.video_settings_label.setObjectName("video_settings_label")
        self.z_stack_spectral_check_box = QtWidgets.QCheckBox(AdvancedSettingsDialog)
        self.z_stack_spectral_check_box.setGeometry(QtCore.QRect(60, 40, 121, 20))
        self.z_stack_spectral_check_box.setObjectName("z_stack_spectral_check_box")
        self.stage_speed_label = QtWidgets.QLabel(AdvancedSettingsDialog)
        self.stage_speed_label.setGeometry(QtCore.QRect(40, 100, 71, 20))
        self.stage_speed_label.setObjectName("stage_speed_label")
        self.stage_speed_combo_box = QtWidgets.QComboBox(AdvancedSettingsDialog)
        self.stage_speed_combo_box.setGeometry(QtCore.QRect(110, 100, 69, 22))
        self.stage_speed_combo_box.setObjectName("stage_speed_combo_box")
        self.line = QtWidgets.QFrame(AdvancedSettingsDialog)
        self.line.setGeometry(QtCore.QRect(-50, 180, 531, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.line.setFont(font)
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(4)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(AdvancedSettingsDialog)
        self.line_2.setGeometry(QtCore.QRect(210, -140, 20, 331))
        self.line_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_2.setLineWidth(4)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setObjectName("line_2")
        self.edge_trigger_check_box = QtWidgets.QCheckBox(AdvancedSettingsDialog)
        self.edge_trigger_check_box.setGeometry(QtCore.QRect(60, 70, 121, 20))
        self.edge_trigger_check_box.setObjectName("edge_trigger_check_box")
        self.acq_order_label = QtWidgets.QLabel(AdvancedSettingsDialog)
        self.acq_order_label.setGeometry(QtCore.QRect(230, 150, 91, 20))
        self.acq_order_label.setAlignment(QtCore.Qt.AlignCenter)
        self.acq_order_label.setObjectName("acquisition_order_label")
        self.line_3 = QtWidgets.QFrame(AdvancedSettingsDialog)
        self.line_3.setGeometry(QtCore.QRect(220, 70, 531, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.line_3.setFont(font)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_3.setLineWidth(4)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setObjectName("line_3")
        self.save_label = QtWidgets.QLabel(AdvancedSettingsDialog)
        self.save_label.setGeometry(QtCore.QRect(120, 260, 91, 20))
        self.save_label.setObjectName("save_label")
        self.second_save_path_browse_button = QtWidgets.QPushButton(AdvancedSettingsDialog)
        self.second_save_path_browse_button.setGeometry(QtCore.QRect(180, 230, 75, 23))
        self.second_save_path_browse_button.setObjectName("second_save_path_browse_button")
        self.second_save_path_line_edit = QtWidgets.QLineEdit(AdvancedSettingsDialog)
        self.second_save_path_line_edit.setGeometry(QtCore.QRect(220, 260, 81, 20))
        self.second_save_path_line_edit.setObjectName("second_save_path_line_edit")
        self.second_save_path_check_box = QtWidgets.QCheckBox(AdvancedSettingsDialog)
        self.second_save_path_check_box.setGeometry(QtCore.QRect(160, 200, 121, 20))
        self.second_save_path_check_box.setObjectName("second_save_path_check_box")

        self.retranslateUi(AdvancedSettingsDialog)
        QtCore.QMetaObject.connectSlotsByName(AdvancedSettingsDialog)

    def retranslateUi(self, AdvancedSettingsDialog):
        _translate = QtCore.QCoreApplication.translate
        AdvancedSettingsDialog.setWindowTitle(_translate("AdvancedSettingsDialog", "Advanced Settings"))
        self.advanced_general_settings_label.setText(_translate("AdvancedSettingsDialog", "Advanced General Settings"))
        self.acq_order_combo_box.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>Sets acquisition priority order.</p><p>If set to TIME_SAMP, the outermost loop will be the time points loop. All fish will be imaged in order, and then the program will wait for the next time point. This is the default acquisition mode.</p><p>If set to SAMP_TIME, the outermost loop will be the fish number loop. The first fish will be imaged, then the program will wait for the next time point, then the same fish will be imaged, and so on. Only once all time points are complete will the program move on to the next fish, for which it will complete another full time series.</p></body></html>"))
        self.z_stack_exp_unit_label.setText(_translate("AdvancedSettingsDialog", "ms"))
        self.z_stack_settings_label.setText(_translate("AdvancedSettingsDialog", "Z-Stack Settings"))
        self.z_stack_exposure_line_edit.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>Exposure time for use in Z-stack. If the Cycle Channels box is not checked, this exposure time must be less than or equal to 1/(stage speed) seconds. That is, if stage speed = 30, then the exposure time must be less than or equal to 1/30 = 33 ms.</p></body></html>"))
        self.lsrm_check_box.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>If checked, enables light sheet readout mode while acquiring images taken in fluorescent channels. LSRM  should be configured in the Spim Controls GUI before using it in acquisitions.</p></body></html>"))
        self.lsrm_check_box.setText(_translate("AdvancedSettingsDialog", "Lighsheet Readout Mode"))
        self.z_stack_exposure_label.setText(_translate("AdvancedSettingsDialog", "Z-Stack Exposure Time:"))
        self.video_spectral_check_box.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>If checked, Video acquisitions will change filters every frame in the order specified by the Channel Order above. Note that this significantly slows down video acquisitions since switching between channels takes time and is only meant to be used if timing between channel frames is very important.</p></body></html>"))
        self.video_spectral_check_box.setText(_translate("AdvancedSettingsDialog", "Spectral Video?"))
        self.video_settings_label.setText(_translate("AdvancedSettingsDialog", "Video Settings"))
        self.z_stack_spectral_check_box.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>If checked, Z-stack acquisitions will change filters every frame in the order specified by the Channel Order above. The stage will move by the amount specified by Stepsize, take an image with each channel, move by the Stepsize again, take images in all channels, and so on. </p><p>Note that this is very fringe and should only be used if images of the same plane with different channels is time-sensitive for some reason.</p></body></html>"))
        self.z_stack_spectral_check_box.setText(_translate("AdvancedSettingsDialog", "Spectral Z-Stack?"))
        self.stage_speed_label.setText(_translate("AdvancedSettingsDialog", "Stage Speed:"))
        self.stage_speed_combo_box.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>Sets stage speed to be used during continuous Z-stack. Note that this value is irrelevant if Spectral Scan is checked above.</p><p>Since 30 is the full sensor maximum framerate of the PCO camera, 30 um/s is the current default speed. </p></body></html>"))
        self.edge_trigger_check_box.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>If checked, Z-stack acquisitions will change filters every frame in the order specified by the Channel Order above. The stage will move by the amount specified by Stepsize, take an image with each channel, move by the Stepsize again, take images in all channels, and so on. </p><p>Note that this is very fringe and should only be used if images of the same plane with different channels is time-sensitive for some reason.</p></body></html>"))
        self.edge_trigger_check_box.setText(_translate("AdvancedSettingsDialog", "Edge Trigger?"))
        self.acq_order_label.setText(_translate("AdvancedSettingsDialog", "Acquisition Order:"))
        self.save_label.setText(_translate("AdvancedSettingsDialog", "Second Save Path:"))
        self.second_save_path_browse_button.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>Browse and choose directory for acquisition to be saved</p></body></html>"))
        self.second_save_path_browse_button.setText(_translate("AdvancedSettingsDialog", "Browse..."))
        self.second_save_path_line_edit.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>Save location of acquisition</p></body></html>"))
        self.second_save_path_check_box.setWhatsThis(_translate("AdvancedSettingsDialog", "<html><head/><body><p>If checked, Video acquisitions will change filters every frame in the order specified by the Channel Order above. Note that this significantly slows down video acquisitions since switching between channels takes time and is only meant to be used if timing between channel frames is very important.</p></body></html>"))
        self.second_save_path_check_box.setText(_translate("AdvancedSettingsDialog", "Second Save Path"))
